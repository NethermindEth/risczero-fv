import Risc0.Map
import Risc0.MlirTactics
import Risc0.Optimisation
import Risc0.Gadgets.ComputeDecode.Witness.CodeReordered

namespace Risc0.ComputeDecode.Witness.Code

open MLIRNotation

lemma optimised_behaviour1 :
  getReturn (full.runProgram st) =
  getReturn (opt1.runProgram st) := by
    unfold getReturn MLIR.runProgram full
    rewrite[const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial)]
    rewrite[←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt1
    simp only

lemma optimised_behaviour2 :
  getReturn (opt1.runProgram st) =
  getReturn (opt2.runProgram st) := by
    unfold getReturn MLIR.runProgram opt1
    rewrite[const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial)]
    rewrite[←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt2
    simp only

lemma optimised_behaviour3 :
  getReturn (opt2.runProgram st) =
  getReturn (opt3.runProgram st) := by
    unfold getReturn MLIR.runProgram opt2
    rewrite[const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial)]
    rewrite[←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt3
    simp only

lemma optimised_behaviour4 :
  getReturn (opt3.runProgram st) =
  getReturn (opt4.runProgram st) := by
    unfold getReturn MLIR.runProgram opt3
    rewrite[const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial)]
    rewrite[←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt4
    simp only

lemma optimised_behaviour5 :
  getReturn (opt4.runProgram st) =
  getReturn (opt5.runProgram st) := by
    unfold getReturn MLIR.runProgram opt4
    rewrite[const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial)]
    rewrite[←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt5
    simp only

lemma optimised_behaviour6 :
  getReturn (opt5.runProgram st) =
  getReturn (opt6.runProgram st) := by
    unfold getReturn MLIR.runProgram opt5
    rewrite[const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial)]
    rewrite[←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt6
    simp only

lemma optimised_behaviour7 :
  getReturn (opt6.runProgram st) =
  getReturn (opt7.runProgram st) := by
    unfold getReturn MLIR.runProgram opt6
    rewrite[const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial)]
    rewrite[←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt7
    simp only

lemma optimised_behaviour8 :
  getReturn (opt7.runProgram st) =
  getReturn (opt8.runProgram st) := by
    unfold getReturn MLIR.runProgram opt7
    rewrite[const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet_single (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet_single (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet_single (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet_single (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet_single (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet_single (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial)]
    rewrite[←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt8
    simp only

lemma optimised_behaviour9 :
  getReturn (opt8.runProgram st) =
  getReturn (opt9.runProgram st) := by
    unfold getReturn MLIR.runProgram opt8
    rewrite[const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial)]
    rewrite[←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt9
    simp only

lemma optimised_behaviour10 :
  getReturn (opt9.runProgram st) =
  getReturn (opt10.runProgram st) := by
    unfold getReturn MLIR.runProgram opt9
    rewrite[const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial)]
    rewrite[←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt10
    simp only

lemma optimised_behaviour11 :
  getReturn (opt10.runProgram st) =
  getReturn (opt11.runProgram st) := by
    unfold getReturn MLIR.runProgram opt10
    rewrite[const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial)]
    rewrite[←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt11
    simp only

lemma optimised_behaviour12 :
  getReturn (opt11.runProgram st) =
  getReturn (opt12.runProgram st) := by
    unfold getReturn MLIR.runProgram opt11
    rewrite[const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet_single (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet_single (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet_single (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet_single (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet_single (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet_single (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet_single (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet_single (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_mul (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_mul (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_mul (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_add (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_add (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_add (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_mul (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_add (by trivial) (by trivial) (by trivial)]
    rewrite[←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt12
    simp only

lemma optimised_behaviour13 :
  getReturn (opt12.runProgram st) =
  getReturn (opt13.runProgram st) := by
    unfold getReturn MLIR.runProgram opt12
    rewrite[const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial)]
    rewrite[←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt13
    simp only

lemma optimised_behaviour14 :
  getReturn (opt13.runProgram st) =
  getReturn (opt14.runProgram st) := by
    unfold getReturn MLIR.runProgram opt13
    rewrite[const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial)]
    rewrite[←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt14
    simp only

lemma optimised_behaviour15 :
  getReturn (opt14.runProgram st) =
  getReturn (opt15.runProgram st) := by
    unfold getReturn MLIR.runProgram opt14
    rewrite[const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial)]
    rewrite[←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt15
    simp only

lemma optimised_behaviour16 :
  getReturn (opt15.runProgram st) =
  getReturn (opt16.runProgram st) := by
    unfold getReturn MLIR.runProgram opt15
    rewrite[const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial)]
    rewrite[←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt16
    simp only

lemma optimised_behaviour17 :
  getReturn (opt16.runProgram st) =
  getReturn (opt17.runProgram st) := by
    unfold getReturn MLIR.runProgram opt16
    rewrite[const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial)]
    rewrite[←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt17
    simp only

lemma optimised_behaviour18 :
  getReturn (opt17.runProgram st) =
  getReturn (opt18.runProgram st) := by
    unfold getReturn MLIR.runProgram opt17
    rewrite[const_past_const (by trivial),MLIR.run_seq_def,const_past_const (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,const_past_set_nondet (by trivial)]
    rewrite[←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt18
    simp only

lemma optimised_behaviour19 :
  getReturn (opt18.runProgram st) =
  getReturn (opt19.runProgram st) := by
    unfold getReturn MLIR.runProgram opt18
    rewrite[const_past_const (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_bitAnd_nondet (by trivial) (by trivial) (by trivial)]
    rewrite[←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt19
    simp only

lemma optimised_behaviour20 :
  getReturn (opt19.runProgram st) =
  getReturn (opt20.runProgram st) := by
    unfold getReturn MLIR.runProgram opt19
    rewrite[const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial),MLIR.run_seq_def,const_past_get (by trivial)]
    rewrite[←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt20
    simp only

lemma optimised_behaviour21 :
  getReturn (opt20.runProgram st) =
  getReturn (opt21.runProgram st) := by
    unfold getReturn MLIR.runProgram opt20
    rewrite[get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet_single (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet_single (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet_single (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet_single (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet_single (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet (by trivial) (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet (by trivial) (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet (by trivial) (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet_single (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet_single (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet (by trivial) (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet_single (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet_single (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet (by trivial) (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet (by trivial) (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet (by trivial) (by trivial)]
    rewrite[←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt21
    simp only

lemma optimised_behaviour22 :
  getReturn (opt21.runProgram st) =
  getReturn (opt22.runProgram st) := by
    unfold getReturn MLIR.runProgram opt21
    rewrite[get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet_single (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet_single (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet_single (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet_single (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet_single (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet (by trivial) (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet (by trivial) (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet (by trivial) (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet_single (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet_single (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet (by trivial) (by trivial)]
    rewrite[←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt22
    simp only

lemma optimised_behaviour23 :
  getReturn (opt22.runProgram st) =
  getReturn (opt23.runProgram st) := by
    unfold getReturn MLIR.runProgram opt22
    rewrite[get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet_single (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet_single (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet_single (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet_single (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet_single (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_mul_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet_single (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_bitAnd_nondet (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_set_buf_nondet (by trivial) (by trivial)]
    rewrite[←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt23
    simp only

lemma optimised_behaviour24 :
  getReturn (opt23.runProgram st) =
  getReturn (opt24.runProgram st) := by
    unfold getReturn MLIR.runProgram opt23
    rewrite[get_past_const (by trivial)]
    unfold opt24
    simp only

lemma optimised_behaviour25 :
  getReturn (opt24.runProgram st) =
  getReturn (opt25.runProgram st) := by
    unfold getReturn MLIR.runProgram opt24
    rewrite[MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def]
    rewrite[get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_mul (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_add (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_add (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_add (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_add (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_mul (by trivial) (by trivial) (by trivial)]
    rewrite[←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt25
    simp only

lemma optimised_behaviour26 :
  getReturn (opt25.runProgram st) =
  getReturn (opt26.runProgram st) := by
    unfold getReturn MLIR.runProgram opt25
    rewrite[MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def]
    rewrite[get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_const (by trivial),MLIR.run_seq_def,get_past_mul (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_add (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_add (by trivial) (by trivial) (by trivial)]
    rewrite[←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt26
    simp only

lemma optimised_behaviour27 :
  getReturn (opt26.runProgram st) =
  getReturn (opt27.runProgram st) := by
    unfold getReturn MLIR.runProgram opt26
    rewrite[MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def]
    rewrite[get_past_const (by trivial)]
    rewrite[←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt27
    simp only

lemma optimised_behaviour28 :
  getReturn (opt27.runProgram st) =
  getReturn (opt28.runProgram st) := by
    unfold getReturn MLIR.runProgram opt27
    rewrite[MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def]
    rewrite[get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_add (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_add (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_add (by trivial) (by trivial) (by trivial)]
    rewrite[←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt28
    simp only

lemma optimised_behaviour29 :
  getReturn (opt28.runProgram st) =
  getReturn (opt29.runProgram st) := by
    unfold getReturn MLIR.runProgram opt28
    rewrite[MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def]
    rewrite[get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_add (by trivial) (by trivial) (by trivial)]
    rewrite[←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt29
    simp only

lemma optimised_behaviour30 :
  getReturn (opt29.runProgram st) =
  getReturn (opt30.runProgram st) := by
    unfold getReturn MLIR.runProgram opt29
    rewrite[MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def]
    rewrite[get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_add (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_add (by trivial) (by trivial) (by trivial),MLIR.run_seq_def,get_past_add (by trivial) (by trivial) (by trivial)]
    rewrite[←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt30
    simp only

lemma optimised_behaviour31 :
  getReturn (opt30.runProgram st) =
  getReturn (opt31.runProgram st) := by
    unfold getReturn MLIR.runProgram opt30
    rewrite[MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def]
    rewrite[get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul (by trivial) (by trivial) (by trivial)]
    rewrite[←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt31
    simp only

lemma optimised_behaviour32 :
  getReturn (opt31.runProgram st) =
  getReturn (opt32.runProgram st) := by
    unfold getReturn MLIR.runProgram opt31
    rewrite[MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,step_nondet,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def,MLIR.run_seq_def]
    rewrite[get_past_get_offset (by trivial) (by trivial),MLIR.run_seq_def,get_past_mul (by trivial) (by trivial) (by trivial)]
    rewrite[←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←step_nondet,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def,←MLIR.run_seq_def]
    unfold opt32
    simp only

lemma optimised_behaviour_full :
  getReturn (full.runProgram st) =
  getReturn (opt_full.runProgram st) := by
    simp [opt_full,optimised_behaviour1,optimised_behaviour2,optimised_behaviour3,optimised_behaviour4,optimised_behaviour5,optimised_behaviour6,optimised_behaviour7,optimised_behaviour8,optimised_behaviour9,optimised_behaviour10,optimised_behaviour11,optimised_behaviour12,optimised_behaviour13,optimised_behaviour14,optimised_behaviour15,optimised_behaviour16,optimised_behaviour17,optimised_behaviour18,optimised_behaviour19,optimised_behaviour20,optimised_behaviour21,optimised_behaviour22,optimised_behaviour23,optimised_behaviour24,optimised_behaviour25,optimised_behaviour26,optimised_behaviour27,optimised_behaviour28,optimised_behaviour29,optimised_behaviour30,optimised_behaviour31,optimised_behaviour32]

end Risc0.ComputeDecode.Witness.Code